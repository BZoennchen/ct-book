Traceback (most recent call last):
  File "/Users/bzoennchen/Development/workspaces/python3env/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/bzoennchen/Development/workspaces/python3env/lib/python3.9/site-packages/nbclient/client.py", line 1107, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/bzoennchen/Development/workspaces/python3env/lib/python3.9/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/bzoennchen/Development/workspaces/python3env/lib/python3.9/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/usr/local/Cellar/python@3.9/3.9.6/Frameworks/Python.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/Users/bzoennchen/Development/workspaces/python3env/lib/python3.9/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/Users/bzoennchen/Development/workspaces/python3env/lib/python3.9/site-packages/nbclient/client.py", line 852, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/bzoennchen/Development/workspaces/python3env/lib/python3.9/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
def ladd(a,b): # Wir nehmen an diese Funktion wird durch Bauteile/Hardware umgesetzt
    return to_binary(to_decimal(a) + to_decimal(b))

def mul(a, b):  # Wir nehmen an diese Funktion durch Code/Software umgesetzt
    result = 0
    for _ in range(to_decimal(b)): # Python versteht unser Bin√§rsystem nicht
        result = ladd(result,a)
    return result

print(f'{[0,0,1,1]} * {[1,0,0,1]} = {mul([0,0,1,1], [1,0,0,1])}')
print(f'{to_decimal([0,0,1,1])} * {to_decimal([1,0,0,1])} = {to_decimal(mul([0,0,1,1], [1,0,0,1]))}')
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
[0;32m<ipython-input-2-947a0e3aa6c8>[0m in [0;36m<module>[0;34m[0m
[1;32m      8[0m     [0;32mreturn[0m [0mresult[0m[0;34m[0m[0;34m[0m[0m
[1;32m      9[0m [0;34m[0m[0m
[0;32m---> 10[0;31m [0mprint[0m[0;34m([0m[0;34mf'{[0,0,1,1]} * {[1,0,0,1]} = {mul([0,0,1,1], [1,0,0,1])}'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     11[0m [0mprint[0m[0;34m([0m[0;34mf'{to_decimal([0,0,1,1])} * {to_decimal([1,0,0,1])} = {to_decimal(mul([0,0,1,1], [1,0,0,1]))}'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m<ipython-input-2-947a0e3aa6c8>[0m in [0;36mmul[0;34m(a, b)[0m
[1;32m      5[0m     [0mresult[0m [0;34m=[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m
[1;32m      6[0m     [0;32mfor[0m [0m_[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mto_decimal[0m[0;34m([0m[0mb[0m[0;34m)[0m[0;34m)[0m[0;34m:[0m [0;31m# Python versteht unser Bin√§rsystem nicht[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 7[0;31m         [0mresult[0m [0;34m=[0m [0mladd[0m[0;34m([0m[0mresult[0m[0;34m,[0m[0ma[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      8[0m     [0;32mreturn[0m [0mresult[0m[0;34m[0m[0;34m[0m[0m
[1;32m      9[0m [0;34m[0m[0m

[0;32m<ipython-input-2-947a0e3aa6c8>[0m in [0;36mladd[0;34m(a, b)[0m
[1;32m      1[0m [0;32mdef[0m [0mladd[0m[0;34m([0m[0ma[0m[0;34m,[0m[0mb[0m[0;34m)[0m[0;34m:[0m [0;31m# Wir nehmen an diese Funktion wird durch Bauteile/Hardware umgesetzt[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 2[0;31m     [0;32mreturn[0m [0mto_binary[0m[0;34m([0m[0mto_decimal[0m[0;34m([0m[0ma[0m[0;34m)[0m [0;34m+[0m [0mto_decimal[0m[0;34m([0m[0mb[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      3[0m [0;34m[0m[0m
[1;32m      4[0m [0;32mdef[0m [0mmul[0m[0;34m([0m[0ma[0m[0;34m,[0m [0mb[0m[0;34m)[0m[0;34m:[0m  [0;31m# Wir nehmen an diese Funktion durch Code/Software umgesetzt[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m     [0mresult[0m [0;34m=[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m

[0;32m<ipython-input-1-8508a3f1242c>[0m in [0;36mto_decimal[0;34m(binary_number)[0m
[1;32m     11[0m [0;32mdef[0m [0mto_decimal[0m[0;34m([0m[0mbinary_number[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     12[0m     [0mdecimal_number[0m [0;34m=[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 13[0;31m     [0mi[0m [0;34m=[0m [0mlen[0m[0;34m([0m[0mbinary_number[0m[0;34m)[0m[0;34m-[0m[0;36m1[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     14[0m     [0;32mfor[0m [0mbit[0m [0;32min[0m [0mbinary_number[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     15[0m         [0mdecimal_number[0m [0;34m+=[0m [0mbit[0m [0;34m*[0m [0;36m2[0m[0;34m**[0m[0mi[0m[0;34m[0m[0;34m[0m[0m

[0;31mTypeError[0m: object of type 'int' has no len()
TypeError: object of type 'int' has no len()

